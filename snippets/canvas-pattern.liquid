<div id="canvas-pattern">
    <div class="content-pattern">
        <canvas></canvas>
    </div>
</div>

<h1>The image should output here</h1>
<img id="theimage" src="" alt="">
<script>
    // window functions
    window.loadPattern = function(img) {
        // console.log(img);

        setupPattern(img);
        
    }

    const setupPattern = async function(img) {
        $canvas = $('#canvas-pattern canvas');
        const ctx = $canvas.get(0).getContext('2d');
        const imgPattern = new Image();

        imgPattern.onload = function() {
            console.log(imgPattern.width);
            ctx.drawImage(imgPattern, 10, 10, 260, 260);
            ctx.drawImage(imgPattern, window.backgroundWidth - 260, 300, 260, 260);
            ctx.drawImage(imgPattern, 10, 600, 240, 240);
            ctx.drawImage(imgPattern, window.backgroundWidth - 260, 1000, 260, 260);
            ctx.drawImage(imgPattern, 10, 1400, 260, 260);

            $('#theimage').attr('src',$canvas.get(0).toDataURL("image/jpg"));
            window.loadToThree($canvas.get(0).toDataURL("image/jpg"));
        }
        img.crossOrigin = 'Anonymous';
        img.origin = 'anonymous';
        let image64 = await imageCutout(img);
        
        if(image64.code == 0) {
            imgPattern.src = 'data:image/png;base64,'+image64.data.imageBase64;
            $('.three-popup__inner--content').removeClass('is-hide');
            $('.three-popup__inner--content:last-child').addClass('is-hide');

        } else {
            alert('error on api');
            $('.content-loader').addClass('is-hide');
            $('.content-inner__picker').removeClass('is-hide');
        }
    }

    const imageCutout = function(img) {
        let fd = new FormData();
        var files = $(img)[0].files
        if(files.length > 0) {
            fd.append('file', files[0]);
        }
        return $.ajax({
            url:  'https://www.cutout.pro/api/v1/matting2?mattingType=3&crop=true',
            type: 'post',
            data: fd,
            contentType: false,
            processData: false,
            headers: {
                'APIKEY': '87d4e0b99e5941a0abddbb19aacf42ed',
                'Access-Control-Allow-Origin': '*'
            }
        })
    }

    // Functions
    const buildBackground = function(bg) {
        $canvas = $('#canvas-pattern canvas');
        const ctx = $canvas.get(0).getContext('2d');

        const img = new Image();
        img.crossOrigin = 'Anonymous';
        img.origin = 'anonymous';
        img.onload = function() {
            console.log(img.height)

            $canvas.attr({'width': img.width, 'height': img.height});
            window.backgroundWidth = img.width;

            //draw background image
            ctx.drawImage(img, 0, 0, img.width, img.height);
        }

        img.src = bg;
    }

    const getActiveBackground = function() {
        let pattern = '';
        $('variant-radios fieldset').children('input').each(function() {
            if($(this).is(':checked')) pattern = $(this).data('pattern');
        });
        return pattern;
    }

    const initPattern = function() {
        const bg = getActiveBackground();
        buildBackground(bg);
        // console.log(bg);
    }
    // Events
    $('variant-radios').on('change', 'fieldset input', function() {
        let bg = getActiveBackground();
        buildBackground(bg);
    });

    $(document).ready(function() {
        initPattern();
    });
</script>